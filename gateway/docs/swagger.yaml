basePath: /api/v1
definitions:
  auth.UserResponse:
    properties:
      email:
        type: string
      handle:
        type: string
      id:
        type: string
      status:
        type: string
    type: object
  handlers.CreateTaskRequest:
    properties:
      assignee_id:
        type: string
      description:
        type: string
      due_date:
        type: string
      priority:
        type: integer
      status:
        type: string
      title:
        type: string
    type: object
  handlers.CreateTaskResponse:
    properties:
      task_id:
        type: string
    type: object
  handlers.ErrorInfo:
    properties:
      code:
        type: string
      details:
        type: string
      message:
        type: string
    type: object
  handlers.ErrorResponse:
    properties:
      code:
        type: string
      details:
        type: string
      message:
        type: string
    type: object
  handlers.GetAllTaskSystemEventsResponse:
    properties:
      events:
        items:
          $ref: '#/definitions/handlers.TaskSystemEventResponse'
        type: array
    type: object
  handlers.GetAllTasksResponse:
    properties:
      tasks:
        items:
          $ref: '#/definitions/handlers.GetTaskResponse'
        type: array
    type: object
  handlers.GetTaskResponse:
    properties:
      assignee:
        $ref: '#/definitions/auth.UserResponse'
      created_at:
        type: string
      creator:
        $ref: '#/definitions/auth.UserResponse'
      description:
        type: string
      due_date:
        type: string
      events:
        items:
          $ref: '#/definitions/handlers.TaskSystemEventResponse'
        type: array
      id:
        type: string
      priority:
        type: integer
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  handlers.MetaInfo:
    properties:
      page:
        type: integer
      per_page:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  handlers.StandardResponse:
    properties:
      data: {}
      error:
        $ref: '#/definitions/handlers.ErrorInfo'
      meta:
        $ref: '#/definitions/handlers.MetaInfo'
      success:
        type: boolean
    type: object
  handlers.TaskSystemEventResponse:
    properties:
      action:
        type: string
      correlation_id:
        type: string
      created_at:
        type: string
      emit_at:
        type: string
      id:
        type: string
      json_data:
        type: string
      message:
        type: string
      origin:
        type: string
      task_id:
        type: string
    type: object
  handlers.UpdateTaskRequest:
    properties:
      assignee_id:
        type: string
      description:
        type: string
      due_date:
        type: string
      priority:
        type: integer
      status:
        type: string
      title:
        type: string
    type: object
  handlers.UpdateTaskResponse:
    properties:
      task_id:
        type: string
    type: object
  in_app_notification.CreateNotificationInput:
    properties:
      message:
        type: string
      title:
        type: string
      user_id:
        type: string
    type: object
  in_app_notification.NotificationResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      is_read:
        type: boolean
      message:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
host: localhost:3012
info:
  contact: {}
  description: Validation error for a specific field
  title: Task Management API
  version: "1.0"
paths:
  /notifications:
    get:
      description: Retrieves all notifications for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/in_app_notification.NotificationResponse'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get user notifications
      tags:
      - notifications
    post:
      consumes:
      - application/json
      description: Creates a new notification for a user
      parameters:
      - description: Notification details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/in_app_notification.CreateNotificationInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/in_app_notification.NotificationResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create a notification
      tags:
      - notifications
  /notifications/{id}:
    delete:
      description: Deletes a specific notification
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "403":
          description: Not authorized to delete this notification
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Delete notification
      tags:
      - notifications
  /notifications/{id}/read:
    post:
      description: Marks a specific notification as read
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "403":
          description: Not authorized to access this notification
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Mark notification as read
      tags:
      - notifications
  /task-system-events:
    get:
      consumes:
      - application/json
      description: Retrieves all system events related to tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.StandardResponse'
            - properties:
                data:
                  $ref: '#/definitions/handlers.GetAllTaskSystemEventsResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get all task system events
      tags:
      - system-events
  /tasks:
    get:
      consumes:
      - application/json
      description: Retrieves all tasks for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GetAllTasksResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get all tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Creates a new task for the authenticated user
      parameters:
      - description: Task details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateTaskRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.CreateTaskResponse'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create a new task
      tags:
      - tasks
  /tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a task by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Task deleted successfully
        "400":
          description: Invalid task ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Delete a task
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: Retrieves a specific task by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GetTaskResponse'
        "400":
          description: Invalid task ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get a task by ID
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Updates an existing task by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Task update details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UpdateTaskResponse'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Update a task
      tags:
      - tasks
swagger: "2.0"
