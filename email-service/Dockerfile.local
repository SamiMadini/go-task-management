FROM golang:1.24-bullseye AS deps

WORKDIR /deps

# Copy only the files needed for downloading dependencies
COPY go.work go.work.sum ./
COPY commons/go.mod commons/go.sum ./commons/
COPY gateway/go.mod gateway/go.sum ./gateway/
COPY notification-service/go.mod notification-service/go.sum ./notification-service/
COPY email-service/src/go.mod email-service/src/go.sum ./email-service/src/

# Download dependencies
RUN go mod download

FROM golang:1.24-bullseye AS builder

WORKDIR /build

# Copy dependencies from deps stage
COPY --from=deps /go/pkg /go/pkg

# Copy source code
COPY commons/ /build/commons/
COPY gateway/ /build/gateway/
COPY notification-service/ /build/notification-service/
COPY email-service/src/ /build/email-service/src/
COPY go.work go.work.sum ./

WORKDIR /build/email-service/src

# Build the application
RUN CGO_ENABLED=0 go build -o /build/server

FROM debian:bullseye-slim

WORKDIR /app
COPY --from=builder /build/server /app/server

ENV PORT=8080
ENV POSTGRES_HOST=postgres
ENV POSTGRES_PORT=5432
ENV POSTGRES_USER=postgres
ENV POSTGRES_PASSWORD=postgres
ENV POSTGRES_DB=tasks
ENV AWS_ENDPOINT_URL=http://elasticmq:9324
ENV AWS_REGION=us-east-1
ENV AWS_ACCESS_KEY_ID=localstack
ENV AWS_SECRET_ACCESS_KEY=localstack
ENV SQS_QUEUE_NAME=go-email-service-queue
ENV DEBUG=1

RUN apt-get update && apt-get install -y ca-certificates && rm -rf /var/lib/apt/lists/*

EXPOSE 8080

CMD ["/app/server"]
 